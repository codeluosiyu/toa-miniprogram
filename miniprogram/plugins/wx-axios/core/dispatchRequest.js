import xhr from './xhr';
import { buildURL, isAbsoluteURL, combineURL } from '../helpers/url';
import { flattenHeaders } from '../helpers/headers';
import transform from './transform';
export default function dispatchRequest(config) {
    throwIfCancellationRequested(config);
    processConfig(config);
    return xhr(config).then(function (res) {
        return transformResponseData(res);
    }, function (e) {
        if (e && e.response) {
            e.response = transformResponseData(e.response);
        }
        return Promise.reject(e);
    });
}
function processConfig(config) {
    config.url = transformURL(config);
    config.data = transform(config.data, config.headers, config.transformRequest);
    config.headers = flattenHeaders(config.headers, config.method);
}
function transformURL(config) {
    var url = config.url, params = config.params, baseURL = config.baseURL;
    if (baseURL && !isAbsoluteURL(url)) {
        url = combineURL(baseURL, url);
    }
    return buildURL(url, params);
}
function transformResponseData(res) {
    res.data = transform(res.data, res.headers, res.config.transformResponse);
    return res;
}
function throwIfCancellationRequested(config) {
    if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzcGF0Y2hSZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGlzcGF0Y2hSZXF1ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sR0FBRyxNQUFNLE9BQU8sQ0FBQTtBQUN2QixPQUFPLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQTtBQUNwRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUE7QUFDbkQsT0FBTyxTQUFTLE1BQU0sYUFBYSxDQUFBO0FBRW5DLE1BQU0sQ0FBQyxPQUFPLFVBQVUsZUFBZSxDQUFDLE1BQTBCO0lBQ2hFLDRCQUE0QixDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ3BDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNyQixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxHQUF1QjtRQUM5QyxPQUFPLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQ25DLENBQUMsRUFBRSxVQUFDLENBQU07UUFDUixJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFO1lBQ25CLENBQUMsQ0FBQyxRQUFRLEdBQUcscUJBQXFCLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFBO1NBQy9DO1FBQ0QsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQzFCLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQztBQUVELFNBQVMsYUFBYSxDQUFDLE1BQTBCO0lBQy9DLE1BQU0sQ0FBQyxHQUFHLEdBQUcsWUFBWSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBQ2pDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtJQUM3RSxNQUFNLENBQUMsT0FBTyxHQUFHLGNBQWMsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxNQUFPLENBQUMsQ0FBQTtBQUNqRSxDQUFDO0FBRUQsU0FBUyxZQUFZLENBQUMsTUFBMEI7SUFDeEMsSUFBQSxHQUFHLEdBQXNCLE1BQU0sSUFBNUIsRUFBRSxNQUFNLEdBQWMsTUFBTSxPQUFwQixFQUFFLE9BQU8sR0FBSyxNQUFNLFFBQVgsQ0FBVztJQUNyQyxJQUFJLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFJLENBQUMsRUFBRTtRQUNuQyxHQUFHLEdBQUcsVUFBVSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQTtLQUMvQjtJQUNELE9BQU8sUUFBUSxDQUFDLEdBQUksRUFBRSxNQUFNLENBQUMsQ0FBQTtBQUMvQixDQUFDO0FBRUQsU0FBUyxxQkFBcUIsQ0FBQyxHQUFrQjtJQUMvQyxHQUFHLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFBO0lBQ3pFLE9BQU8sR0FBRyxDQUFBO0FBQ1osQ0FBQztBQUVELFNBQVMsNEJBQTRCLENBQUMsTUFBMEI7SUFDOUQsSUFBSSxNQUFNLENBQUMsV0FBVyxFQUFFO1FBQ3RCLE1BQU0sQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQTtLQUN0QztBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBeGlvc1Byb21pc2UsIEF4aW9zUmVxdWVzdENvbmZpZywgQXhpb3NSZXNwb25zZSB9IGZyb20gJy4uL3R5cGVzL2luZGV4J1xuaW1wb3J0IHhociBmcm9tICcuL3hocidcbmltcG9ydCB7IGJ1aWxkVVJMLCBpc0Fic29sdXRlVVJMLCBjb21iaW5lVVJMIH0gZnJvbSAnLi4vaGVscGVycy91cmwnXG5pbXBvcnQgeyBmbGF0dGVuSGVhZGVycyB9IGZyb20gJy4uL2hlbHBlcnMvaGVhZGVycydcbmltcG9ydCB0cmFuc2Zvcm0gZnJvbSAnLi90cmFuc2Zvcm0nXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpc3BhdGNoUmVxdWVzdChjb25maWc6IEF4aW9zUmVxdWVzdENvbmZpZyk6IEF4aW9zUHJvbWlzZSB7XG4gIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnKVxuICBwcm9jZXNzQ29uZmlnKGNvbmZpZylcbiAgcmV0dXJuIHhocihjb25maWcpLnRoZW4oKHJlczogQXhpb3NSZXNwb25zZTxhbnk+KSA9PiB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybVJlc3BvbnNlRGF0YShyZXMpXG4gIH0sIChlOiBhbnkpID0+IHtcbiAgICBpZiAoZSAmJiBlLnJlc3BvbnNlKSB7XG4gICAgICBlLnJlc3BvbnNlID0gdHJhbnNmb3JtUmVzcG9uc2VEYXRhKGUucmVzcG9uc2UpXG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlKVxuICB9KVxufVxuXG5mdW5jdGlvbiBwcm9jZXNzQ29uZmlnKGNvbmZpZzogQXhpb3NSZXF1ZXN0Q29uZmlnKTogdm9pZCB7XG4gIGNvbmZpZy51cmwgPSB0cmFuc2Zvcm1VUkwoY29uZmlnKVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybShjb25maWcuZGF0YSwgY29uZmlnLmhlYWRlcnMsIGNvbmZpZy50cmFuc2Zvcm1SZXF1ZXN0KVxuICBjb25maWcuaGVhZGVycyA9IGZsYXR0ZW5IZWFkZXJzKGNvbmZpZy5oZWFkZXJzLCBjb25maWcubWV0aG9kISlcbn1cblxuZnVuY3Rpb24gdHJhbnNmb3JtVVJMKGNvbmZpZzogQXhpb3NSZXF1ZXN0Q29uZmlnKTogc3RyaW5nIHtcbiAgbGV0IHsgdXJsLCBwYXJhbXMsIGJhc2VVUkwgfSA9IGNvbmZpZ1xuICBpZiAoYmFzZVVSTCAmJiAhaXNBYnNvbHV0ZVVSTCh1cmwhKSkge1xuICAgIHVybCA9IGNvbWJpbmVVUkwoYmFzZVVSTCwgdXJsKVxuICB9XG4gIHJldHVybiBidWlsZFVSTCh1cmwhLCBwYXJhbXMpXG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybVJlc3BvbnNlRGF0YShyZXM6IEF4aW9zUmVzcG9uc2UpOiBBeGlvc1Jlc3BvbnNlIHtcbiAgcmVzLmRhdGEgPSB0cmFuc2Zvcm0ocmVzLmRhdGEsIHJlcy5oZWFkZXJzLCByZXMuY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlKVxuICByZXR1cm4gcmVzXG59XG5cbmZ1bmN0aW9uIHRocm93SWZDYW5jZWxsYXRpb25SZXF1ZXN0ZWQoY29uZmlnOiBBeGlvc1JlcXVlc3RDb25maWcpOiB2b2lkIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKClcbiAgfVxufSJdfQ==